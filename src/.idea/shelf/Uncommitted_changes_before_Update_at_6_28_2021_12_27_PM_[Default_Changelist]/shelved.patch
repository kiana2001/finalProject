Index: Pattern.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Pattern {\r\n    public static String FOR_HEAD=\"\\\\s*for\\\\s*\\\\d+\\\\s*\";\r\n    public static String FOR_END=\"\\\\s*end\\\\s+for\\\\s*\";\r\n    public static String VARIABLE_WITH_AMOUNT=\"\\\\s*(int|float)\\\\s*\\\\w+\\\\s*[=]\\\\s*\\\\d+\\\\s*\";\r\n    public static String VARIABLE_WITHOUT_AMOUNT=\"\\\\s*(int|float)\\\\s*\\\\w+\\\\s*\";\r\n    public static String DIVIDER=\"[%]+\";\r\n    public static String MATH_OPERATION=\"[\\\\w|\\\\d]+\\\\s*[=]\\\\s*[\\\\w|\\\\d]+\\\\s*[\\\\-*\\\\/+]\\\\s*[\\\\w|\\\\d]\";\r\n    public static String PRINT=\"print\\\\s*[\\\\w+|\\\\d]+\\\\s*\";\r\n    public static String ASSIGNMENT =\"\\\\w+\\\\s*[=]\\\\s*[\\\\w|\\\\d]+\\\\s*([\\\\-*\\\\/+]\\\\s*[\\\\w|\\\\d])*\";\r\n\r\n    private static final String[] KEYWORDS = new String[] {\r\n            \"abstract\", \"assert\", \"boolean\", \"break\", \"byte\",\r\n            \"case\", \"catch\", \"char\", \"class\", \"const\",\r\n            \"continue\", \"default\", \"do\", \"double\", \"else\",\r\n            \"enum\", \"extends\", \"final\", \"finally\", \"float\",\r\n            \"for\", \"goto\", \"if\", \"implements\", \"import\",\r\n            \"instanceof\", \"int\", \"interface\", \"long\", \"native\",\r\n            \"new\", \"package\", \"private\", \"protected\", \"public\",\r\n            \"return\", \"short\", \"static\", \"strictfp\", \"super\",\r\n            \"switch\", \"synchronized\", \"this\", \"throw\", \"throws\",\r\n            \"transient\", \"try\", \"void\", \"volatile\", \"while\",\"end\",\"print\"\r\n    };\r\n\r\n    private static final String STRING_PATTERN = \"\\\"([^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"\";\r\n    private static final String COMMENT_PATTERN = \"//[^\\n]*\" + \"|\" + \"/\\\\*(.|\\\\R)*?\\\\*/\"   // for whole text processing (text blocks)\r\n            + \"|\" + \"/\\\\*[^\\\\v]*\" + \"|\" + \"^\\\\h*\\\\*([^\\\\v]*|/)\";  // for visible paragraph processing (line by line)\r\n    private static final String PAREN_PATTERN = \"\\\\(|\\\\)\";\r\n    private static final String BRACE_PATTERN = \"\\\\{|\\\\}\";\r\n    private static final String KEYWORD_PATTERN = \"\\\\b(\" + String.join(\"|\", KEYWORDS) + \")\\\\b\";\r\n    public static final String HIGHLIGHT =  \"(?<KEYWORD>\" + KEYWORD_PATTERN + \")\"\r\n            + \"|(?<PAREN>\" + PAREN_PATTERN + \")\"\r\n            + \"|(?<BRACE>\" + BRACE_PATTERN + \")\"\r\n            + \"|(?<STRING>\" + STRING_PATTERN + \")\"\r\n            + \"|(?<COMMENT>\" + COMMENT_PATTERN + \")\";\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Pattern.java b/Pattern.java
--- a/Pattern.java	(revision 891da746171437f30c1926c6e05103c2c55be2b8)
+++ b/Pattern.java	(date 1624638471920)
@@ -4,9 +4,9 @@
     public static String VARIABLE_WITH_AMOUNT="\\s*(int|float)\\s*\\w+\\s*[=]\\s*\\d+\\s*";
     public static String VARIABLE_WITHOUT_AMOUNT="\\s*(int|float)\\s*\\w+\\s*";
     public static String DIVIDER="[%]+";
-    public static String MATH_OPERATION="[\\w|\\d]+\\s*[=]\\s*[\\w|\\d]+\\s*[\\-*\\/+]\\s*[\\w|\\d]";
-    public static String PRINT="print\\s*[\\w+|\\d]+\\s*";
-    public static String ASSIGNMENT ="\\w+\\s*[=]\\s*[\\w|\\d]+\\s*([\\-*\\/+]\\s*[\\w|\\d])*";
+    public static String MATH_OPERATION="\\s*[\\w|\\d]+\\s*[=]\\s*[\\w|\\d]+\\s*[\\-*\\/+]\\s*[\\w|\\d]";
+    public static String PRINT="\\s*print\\s*[\\w+|\\d]+\\s*";
+    public static String ASSIGNMENT ="\\s*\\w+\\s*[=]\\s*[\\w|\\d]+\\s*([\\-*\\/+]\\s*[\\w|\\d])*";
 
     private static final String[] KEYWORDS = new String[] {
             "abstract", "assert", "boolean", "break", "byte",
Index: ui/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ui;\r\nimport javafx.application.Application;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.layout.*;\r\nimport javafx.stage.Stage;\r\n\r\npublic class Main extends Application {\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) throws Exception {\r\n        primaryStage.show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ui/Main.java b/ui/Main.java
--- a/ui/Main.java	(revision 891da746171437f30c1926c6e05103c2c55be2b8)
+++ b/ui/Main.java	(date 1624570510201)
@@ -1,5 +1,5 @@
 package ui;
-import javafx.application.Application;
+/*import javafx.application.Application;
 import javafx.scene.Scene;
 import javafx.scene.control.*;
 import javafx.scene.image.Image;
@@ -17,3 +17,4 @@
         primaryStage.show();
     }
 }
+*/
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1624570510444)
+++ b/.idea/vcs.xml	(date 1624570510444)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1624570510252)
+++ b/.idea/modules.xml	(date 1624570510252)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/src.iml" filepath="$PROJECT_DIR$/.idea/src.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/src.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/src.iml b/.idea/src.iml
new file mode 100644
--- /dev/null	(date 1624570510302)
+++ b/.idea/src.iml	(date 1624570510302)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1624570510374)
+++ b/.idea/workspace.xml	(date 1624570510374)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="cecb42ec-24c6-4550-ae1b-5a7c045ad748" name="Default Changelist" comment="">
+      <change beforePath="$PROJECT_DIR$/../.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ui/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/ui/Main.java" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="ProjectId" id="1uPaxSenUAxZSp1l8pTfyJy6Hok" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">
+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
+    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="cecb42ec-24c6-4550-ae1b-5a7c045ad748" name="Default Changelist" comment="" />
+      <created>1624569927696</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1624569927696</updated>
+    </task>
+    <servers />
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" default=\"true\" project-jdk-name=\"16\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/misc.xml b/../.idea/misc.xml
--- a/../.idea/misc.xml	(revision 891da746171437f30c1926c6e05103c2c55be2b8)
+++ b/../.idea/misc.xml	(date 1624570510364)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="16" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" project-jdk-name="16" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
